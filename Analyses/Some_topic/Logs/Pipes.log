2018-11-06 21:03:39,411 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, positive=False, precompute=False, random_state=None,
   selection='cyclic', tol=0.0001, warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='MAE', verbose=0)
2018-11-06 21:09:16,031 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, positive=False, precompute=False, random_state=None,
   selection='cyclic', tol=0.0001, warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:15:33,819 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', OneHotEncoder(categorical_features='all', dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, positive=False, precompute=False, random_state=None,
   selection='cyclic', tol=0.0001, warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:15:33,819 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', OneHotEncoder(categorical_features='all', dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
   normalize=False, positive=False, precompute=False, random_state=None,
   selection='cyclic', tol=0.0001, warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:18:47,612 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', OneHotEncoder(categorical_features='all', dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:18:47,612 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', OneHotEncoder(categorical_features='all', dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:18:47,612 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', OneHotEncoder(categorical_features='all', dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:22:49,176 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', LabelEncoder()), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:22:49,176 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', LabelEncoder()), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:22:49,176 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', LabelEncoder()), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:22:49,176 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencode', LabelEncoder()), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:25:45,620 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:25:45,620 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:25:45,620 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:25:45,620 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:25:45,620 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:33:57,802 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=['Embarked', 'Sex'],
       dtype=<class 'numpy.float64'>, handle_unknown='error',
       n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:35:02,579 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=True)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:36:32,690 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
           ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:38:09,926 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:39:24,858 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:43:33,318 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['mean', 'median']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:45:40,652 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_mean_absolute_error', verbose=0)
2018-11-06 21:46:58,953 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:48:45,807 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='Accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:02,611 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:49:39,715 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:50:22,402 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:03,503 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:51:58,956 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='negative_mean_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:18,332 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:52:50,659 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:53:10,739 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ...    verbose=0, warm_start=False)], 'clf__alpha': [0.1, 1.0, 10.0, 100.0], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='neg_median_absolute_error', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:05,484 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:54:33,058 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:05,771 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:30,299 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 21:55:36,558 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:00:59,828 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent', 'stratified']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:30,227 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:01:57,371 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:14,878 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:02:50,209 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [5, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:03:57,050 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:05:43,732 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... None], 'clf__min_samples_leaf': [5, 10], 'clf__random_state': [7], 'clf__max_features': [3, None]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:14:07,103 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:19:04,842 - Model - INFO - V000003
2018-11-06 22:19:04,843 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:27:59,364 - Model - INFO - V000203
2018-11-06 22:27:59,365 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', RandomForestClassifier(bootstrap=True, class_weight=No...n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:57:19,654 - Model - INFO - V000203
2018-11-06 22:57:19,654 - Model - INFO - V000203
2018-11-06 22:57:19,655 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 22:57:19,655 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
2018-11-06 23:41:41,696 - Model - INFO - V000203
2018-11-06 23:41:41,696 - Model - INFO - GridSearchCV(cv=5, error_score='raise',
       estimator=Pipeline(memory=None,
     steps=[('onehotencoder', OneHotEncoder(categorical_features=[1, 6], dtype=<class 'numpy.float64'>,
       handle_unknown='error', n_values='auto', sparse=False)), ('standardize', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', DummyClassifier(constant=None, random_state=None, strategy='stratified'))]),
       fit_params=None, iid=True, n_jobs=-1,
       param_grid=[{'clf': [DummyClassifier(constant=None, random_state=None, strategy='stratified')], 'clf__strategy': ['most_frequent']}, {'clf': [RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            ... solver='liblinear', tol=0.0001,
          verbose=0, warm_start=False)], 'clf__random_state': [7]}],
       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,
       scoring='accuracy', verbose=0)
